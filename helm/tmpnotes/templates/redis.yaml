{{ if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
    spec:
      automountServiceAccountToken: false
      containers:
        - command:
            - redis-server
            - --bind
            - 0.0.0.0
            - --dir
            - /bitnami/redis/data
          image: bitnami/redis:6.2
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: 'yes'
          imagePullPolicy: Always
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
          resources:
            requests:
              memory: '100M'
              cpu: '100m'
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop: ['ALL']
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 1001
        runAsNonRoot: true
        seccompProfile:
          type: 'RuntimeDefault'
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  sessionAffinity: None
  type: ClusterIP
{{ end }}